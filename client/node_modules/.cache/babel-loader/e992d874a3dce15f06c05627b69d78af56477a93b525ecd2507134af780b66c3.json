{"ast":null,"code":"// /client/src/services/index.ts\n// Main service exports for easy importing\n// Import individual services\nimport SupporterService from'./supporterService';import CommunicationService from'./communicationService';// Export individual services\nexport{default as BaseService}from'./baseServices';export{default as SupporterService}from'./supporterService';export{default as CommunicationService}from'./communicationService';// For convenience, export service instances\nexport const supporterService=SupporterService;export const communicationService=CommunicationService;// For backward compatibility, re-export the original apiService\nexport{apiService}from'./apiService';// Service types for TypeScript\n/*\nUsage Examples:\n\n// Option 1: Named imports\nimport { SupporterService, CommunicationService } from '../../services';\n\n// Option 2: Service instances\nimport { supporterService, communicationService } from '../../services';\n\n// Option 3: Individual imports\nimport SupporterService from '../../services/SupporterService';\n\n// Option 4: Types\nimport { CreateSupporterData, DonorStats } from '../../services';\n\n// Usage in components:\nconst donors = await supporterService.getTopDonors(clubId, 10);\nconst communication = await communicationService.logCommunication(supporterId, data);\n*/","map":{"version":3,"names":["SupporterService","CommunicationService","default","BaseService","supporterService","communicationService","apiService"],"sources":["/home/paulag/fundraisely-club/client/src/services/index.ts"],"sourcesContent":["// /client/src/services/index.ts\n// Main service exports for easy importing\n\n// Import individual services\nimport SupporterService from './supporterService';\nimport CommunicationService from './communicationService';\n\n// Export individual services\nexport { default as BaseService } from './baseServices';\nexport { default as SupporterService } from './supporterService';\nexport { default as CommunicationService } from './communicationService';\n\n// For convenience, export service instances\nexport const supporterService = SupporterService;\nexport const communicationService = CommunicationService;\n\n// For backward compatibility, re-export the original apiService\nexport { apiService } from './apiService';\n\n// Service types for TypeScript\nexport type { CreateSupporterData, SupporterFilters, DonorStats } from './supporterService';\nexport type { CreateCommunicationData, CommunicationFilters } from './communicationService';\n\n/*\nUsage Examples:\n\n// Option 1: Named imports\nimport { SupporterService, CommunicationService } from '../../services';\n\n// Option 2: Service instances\nimport { supporterService, communicationService } from '../../services';\n\n// Option 3: Individual imports\nimport SupporterService from '../../services/SupporterService';\n\n// Option 4: Types\nimport { CreateSupporterData, DonorStats } from '../../services';\n\n// Usage in components:\nconst donors = await supporterService.getTopDonors(clubId, 10);\nconst communication = await communicationService.logCommunication(supporterId, data);\n*/"],"mappings":"AAAA;AACA;AAEA;AACA,MAAO,CAAAA,gBAAgB,KAAM,oBAAoB,CACjD,MAAO,CAAAC,oBAAoB,KAAM,wBAAwB,CAEzD;AACA,OAASC,OAAO,GAAI,CAAAC,WAAW,KAAQ,gBAAgB,CACvD,OAASD,OAAO,GAAI,CAAAF,gBAAgB,KAAQ,oBAAoB,CAChE,OAASE,OAAO,GAAI,CAAAD,oBAAoB,KAAQ,wBAAwB,CAExE;AACA,MAAO,MAAM,CAAAG,gBAAgB,CAAGJ,gBAAgB,CAChD,MAAO,MAAM,CAAAK,oBAAoB,CAAGJ,oBAAoB,CAExD;AACA,OAASK,UAAU,KAAQ,cAAc,CAEzC;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}