{"ast":null,"code":"// /client/src/services/BaseService.ts\n// Base service class with shared functionality for all API services\n\nconst API_BASE_URL = process.env.NODE_ENV === 'production' ? 'https://your-production-api.com/api' : 'http://localhost:3001/api';\nclass BaseService {\n  constructor() {\n    this.baseURL = void 0;\n    this.baseURL = API_BASE_URL;\n  }\n\n  /**\n   * Get authentication headers\n   */\n  getAuthHeaders() {\n    const token = localStorage.getItem('auth_token');\n    return {\n      'Content-Type': 'application/json',\n      ...(token && {\n        Authorization: `Bearer ${token}`\n      })\n    };\n  }\n\n  /**\n   * Make authenticated API request\n   */\n  async request(endpoint, options = {}) {\n    const url = `${this.baseURL}${endpoint}`;\n    const config = {\n      headers: this.getAuthHeaders(),\n      ...options\n    };\n    console.log(`üåê API Request: ${options.method || 'GET'} ${url}`);\n    console.log('üîë Headers:', config.headers);\n    if (options.body) {\n      console.log('üì¶ Body:', options.body);\n    }\n    try {\n      const response = await fetch(url, config);\n      console.log(`üì° Response Status: ${response.status} ${response.statusText}`);\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        console.error('‚ùå API Error Response:', errorData);\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('‚úÖ API Response Data:', data);\n      return data;\n    } catch (error) {\n      console.error(`üí• API Error (${endpoint}):`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Handle file uploads\n   */\n  async uploadFile(endpoint, file, additionalData) {\n    const token = localStorage.getItem('auth_token');\n    const formData = new FormData();\n    formData.append('file', file);\n    if (additionalData) {\n      Object.entries(additionalData).forEach(([key, value]) => {\n        formData.append(key, typeof value === 'string' ? value : JSON.stringify(value));\n      });\n    }\n    const response = await fetch(`${this.baseURL}${endpoint}`, {\n      method: 'POST',\n      headers: {\n        ...(token && {\n          Authorization: `Bearer ${token}`\n        })\n        // Don't set Content-Type for FormData, browser will set it with boundary\n      },\n      body: formData\n    });\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n    }\n    return response.json();\n  }\n\n  /**\n   * Download file from API\n   */\n  async downloadFile(endpoint, filename) {\n    const response = await fetch(`${this.baseURL}${endpoint}`, {\n      headers: this.getAuthHeaders()\n    });\n    if (!response.ok) {\n      throw new Error(`Download failed: ${response.statusText}`);\n    }\n    const blob = await response.blob();\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = filename || 'download';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  }\n\n  /**\n   * Batch requests with concurrent limit\n   */\n  async batchRequest(requests, concurrency = 5) {\n    const results = [];\n    for (let i = 0; i < requests.length; i += concurrency) {\n      const batch = requests.slice(i, i + concurrency);\n      const batchResults = await Promise.all(batch.map(req => req()));\n      results.push(...batchResults);\n    }\n    return results;\n  }\n\n  /**\n   * Retry failed requests\n   */\n  async retryRequest(requestFn, maxRetries = 3, delay = 1000) {\n    let lastError;\n    for (let attempt = 1; attempt <= maxRetries; attempt++) {\n      try {\n        return await requestFn();\n      } catch (error) {\n        lastError = error;\n        if (attempt === maxRetries) {\n          throw lastError;\n        }\n        console.warn(`Request failed (attempt ${attempt}/${maxRetries}), retrying...`, error);\n        await this.delay(delay * attempt);\n      }\n    }\n    throw lastError;\n  }\n\n  /**\n   * Check if user is authenticated\n   */\n  isAuthenticated() {\n    return !!localStorage.getItem('auth_token');\n  }\n\n  /**\n   * Clear authentication\n   */\n  clearAuth() {\n    localStorage.removeItem('auth_token');\n  }\n\n  /**\n   * Set authentication token\n   */\n  setAuthToken(token) {\n    localStorage.setItem('auth_token', token);\n  }\n\n  /**\n   * Utility: Delay execution\n   */\n  delay(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  /**\n   * Utility: Build query string from object\n   */\n  buildQueryString(params) {\n    const searchParams = new URLSearchParams();\n    Object.entries(params).forEach(([key, value]) => {\n      if (value !== undefined && value !== null && value !== '') {\n        if (Array.isArray(value)) {\n          value.forEach(item => searchParams.append(key, item.toString()));\n        } else {\n          searchParams.append(key, value.toString());\n        }\n      }\n    });\n    return searchParams.toString();\n  }\n\n  /**\n   * Utility: Format currency\n   */\n  formatCurrency(amount, currency = 'GBP') {\n    return new Intl.NumberFormat('en-GB', {\n      style: 'currency',\n      currency\n    }).format(amount);\n  }\n\n  /**\n   * Utility: Format date\n   */\n  formatDate(date, options) {\n    const defaultOptions = {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    };\n    return new Date(date).toLocaleDateString('en-GB', options || defaultOptions);\n  }\n\n  /**\n   * Utility: Validate email\n   */\n  isValidEmail(email) {\n    return /\\S+@\\S+\\.\\S+/.test(email);\n  }\n\n  /**\n   * Utility: Validate phone number (UK format)\n   */\n  isValidPhone(phone) {\n    return /^[\\+]?[0-9\\s\\-\\(\\)]{10,}$/.test(phone);\n  }\n\n  /**\n   * Utility: Sanitize input\n   */\n  sanitizeInput(input) {\n    return input.trim().replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '');\n  }\n\n  /**\n   * Utility: Deep clone object\n   */\n  deepClone(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n\n  /**\n   * Utility: Debounce function calls\n   */\n  debounce(func, wait) {\n    let timeout;\n    return (...args) => {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => func.apply(this, args), wait);\n    };\n  }\n\n  /**\n   * Error handling helper\n   */\n  handleError(error, context) {\n    var _error$message, _error$message2;\n    console.error(`Error in ${context}:`, error);\n    if ((_error$message = error.message) !== null && _error$message !== void 0 && _error$message.includes('401') || (_error$message2 = error.message) !== null && _error$message2 !== void 0 && _error$message2.includes('Unauthorized')) {\n      this.clearAuth();\n      window.location.href = '/login';\n    }\n    throw error;\n  }\n}\nexport default BaseService;","map":{"version":3,"names":["API_BASE_URL","process","env","NODE_ENV","BaseService","constructor","baseURL","getAuthHeaders","token","localStorage","getItem","Authorization","request","endpoint","options","url","config","headers","console","log","method","body","response","fetch","status","statusText","ok","errorData","json","catch","error","Error","data","uploadFile","file","additionalData","formData","FormData","append","Object","entries","forEach","key","value","JSON","stringify","downloadFile","filename","blob","window","URL","createObjectURL","link","document","createElement","href","download","appendChild","click","removeChild","revokeObjectURL","batchRequest","requests","concurrency","results","i","length","batch","slice","batchResults","Promise","all","map","req","push","retryRequest","requestFn","maxRetries","delay","lastError","attempt","warn","isAuthenticated","clearAuth","removeItem","setAuthToken","setItem","ms","resolve","setTimeout","buildQueryString","params","searchParams","URLSearchParams","undefined","Array","isArray","item","toString","formatCurrency","amount","currency","Intl","NumberFormat","style","format","formatDate","date","defaultOptions","year","month","day","Date","toLocaleDateString","isValidEmail","email","test","isValidPhone","phone","sanitizeInput","input","trim","replace","deepClone","obj","parse","debounce","func","wait","timeout","args","clearTimeout","apply","handleError","context","_error$message","_error$message2","message","includes","location"],"sources":["/home/paulag/fundraisely-club/client/src/services/baseServices.ts"],"sourcesContent":["// /client/src/services/BaseService.ts\n// Base service class with shared functionality for all API services\n\nconst API_BASE_URL = process.env.NODE_ENV === 'production' \n  ? 'https://your-production-api.com/api' \n  : 'http://localhost:3001/api';\n\nclass BaseService {\n  protected baseURL: string;\n\n  constructor() {\n    this.baseURL = API_BASE_URL;\n  }\n\n  /**\n   * Get authentication headers\n   */\n  protected getAuthHeaders(): Record<string, string> {\n    const token = localStorage.getItem('auth_token');\n    return {\n      'Content-Type': 'application/json',\n      ...(token && { Authorization: `Bearer ${token}` })\n    };\n  }\n\n  /**\n   * Make authenticated API request\n   */\n  protected async request<T>(endpoint: string, options: RequestInit = {}): Promise<T> {\n    const url = `${this.baseURL}${endpoint}`;\n    \n    const config: RequestInit = {\n      headers: this.getAuthHeaders(),\n      ...options,\n    };\n\n    console.log(`üåê API Request: ${options.method || 'GET'} ${url}`);\n    console.log('üîë Headers:', config.headers);\n    if (options.body) {\n      console.log('üì¶ Body:', options.body);\n    }\n\n    try {\n      const response = await fetch(url, config);\n      \n      console.log(`üì° Response Status: ${response.status} ${response.statusText}`);\n      \n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        console.error('‚ùå API Error Response:', errorData);\n        throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      console.log('‚úÖ API Response Data:', data);\n      return data;\n    } catch (error) {\n      console.error(`üí• API Error (${endpoint}):`, error);\n      throw error;\n    }\n  }\n\n  /**\n   * Handle file uploads\n   */\n  protected async uploadFile(endpoint: string, file: File, additionalData?: Record<string, any>): Promise<any> {\n    const token = localStorage.getItem('auth_token');\n    const formData = new FormData();\n    \n    formData.append('file', file);\n    \n    if (additionalData) {\n      Object.entries(additionalData).forEach(([key, value]) => {\n        formData.append(key, typeof value === 'string' ? value : JSON.stringify(value));\n      });\n    }\n\n    const response = await fetch(`${this.baseURL}${endpoint}`, {\n      method: 'POST',\n      headers: {\n        ...(token && { Authorization: `Bearer ${token}` })\n        // Don't set Content-Type for FormData, browser will set it with boundary\n      },\n      body: formData,\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json().catch(() => ({}));\n      throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\n    }\n\n    return response.json();\n  }\n\n  /**\n   * Download file from API\n   */\n  protected async downloadFile(endpoint: string, filename?: string): Promise<void> {\n    const response = await fetch(`${this.baseURL}${endpoint}`, {\n      headers: this.getAuthHeaders(),\n    });\n\n    if (!response.ok) {\n      throw new Error(`Download failed: ${response.statusText}`);\n    }\n\n    const blob = await response.blob();\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    \n    link.href = url;\n    link.download = filename || 'download';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  }\n\n  /**\n   * Batch requests with concurrent limit\n   */\n  protected async batchRequest<T>(\n    requests: Array<() => Promise<T>>, \n    concurrency: number = 5\n  ): Promise<T[]> {\n    const results: T[] = [];\n    \n    for (let i = 0; i < requests.length; i += concurrency) {\n      const batch = requests.slice(i, i + concurrency);\n      const batchResults = await Promise.all(batch.map(req => req()));\n      results.push(...batchResults);\n    }\n    \n    return results;\n  }\n\n  /**\n   * Retry failed requests\n   */\n  protected async retryRequest<T>(\n    requestFn: () => Promise<T>, \n    maxRetries: number = 3,\n    delay: number = 1000\n  ): Promise<T> {\n    let lastError: Error;\n    \n    for (let attempt = 1; attempt <= maxRetries; attempt++) {\n      try {\n        return await requestFn();\n      } catch (error) {\n        lastError = error as Error;\n        \n        if (attempt === maxRetries) {\n          throw lastError;\n        }\n        \n        console.warn(`Request failed (attempt ${attempt}/${maxRetries}), retrying...`, error);\n        await this.delay(delay * attempt);\n      }\n    }\n    \n    throw lastError!;\n  }\n\n  /**\n   * Check if user is authenticated\n   */\n  protected isAuthenticated(): boolean {\n    return !!localStorage.getItem('auth_token');\n  }\n\n  /**\n   * Clear authentication\n   */\n  protected clearAuth(): void {\n    localStorage.removeItem('auth_token');\n  }\n\n  /**\n   * Set authentication token\n   */\n  protected setAuthToken(token: string): void {\n    localStorage.setItem('auth_token', token);\n  }\n\n  /**\n   * Utility: Delay execution\n   */\n  private delay(ms: number): Promise<void> {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  /**\n   * Utility: Build query string from object\n   */\n  protected buildQueryString(params: Record<string, any>): string {\n    const searchParams = new URLSearchParams();\n    \n    Object.entries(params).forEach(([key, value]) => {\n      if (value !== undefined && value !== null && value !== '') {\n        if (Array.isArray(value)) {\n          value.forEach(item => searchParams.append(key, item.toString()));\n        } else {\n          searchParams.append(key, value.toString());\n        }\n      }\n    });\n    \n    return searchParams.toString();\n  }\n\n  /**\n   * Utility: Format currency\n   */\n  protected formatCurrency(amount: number, currency: string = 'GBP'): string {\n    return new Intl.NumberFormat('en-GB', {\n      style: 'currency',\n      currency\n    }).format(amount);\n  }\n\n  /**\n   * Utility: Format date\n   */\n  protected formatDate(date: string | Date, options?: Intl.DateTimeFormatOptions): string {\n    const defaultOptions: Intl.DateTimeFormatOptions = {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    };\n    \n    return new Date(date).toLocaleDateString('en-GB', options || defaultOptions);\n  }\n\n  /**\n   * Utility: Validate email\n   */\n  protected isValidEmail(email: string): boolean {\n    return /\\S+@\\S+\\.\\S+/.test(email);\n  }\n\n  /**\n   * Utility: Validate phone number (UK format)\n   */\n  protected isValidPhone(phone: string): boolean {\n    return /^[\\+]?[0-9\\s\\-\\(\\)]{10,}$/.test(phone);\n  }\n\n  /**\n   * Utility: Sanitize input\n   */\n  protected sanitizeInput(input: string): string {\n    return input.trim().replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '');\n  }\n\n  /**\n   * Utility: Deep clone object\n   */\n  protected deepClone<T>(obj: T): T {\n    return JSON.parse(JSON.stringify(obj));\n  }\n\n  /**\n   * Utility: Debounce function calls\n   */\n  protected debounce<T extends (...args: any[]) => any>(\n    func: T, \n    wait: number\n  ): (...args: Parameters<T>) => void {\n    let timeout: NodeJS.Timeout;\n    \n    return (...args: Parameters<T>) => {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => func.apply(this, args), wait);\n    };\n  }\n\n  /**\n   * Error handling helper\n   */\n  protected handleError(error: any, context: string): never {\n    console.error(`Error in ${context}:`, error);\n    \n    if (error.message?.includes('401') || error.message?.includes('Unauthorized')) {\n      this.clearAuth();\n      window.location.href = '/login';\n    }\n    \n    throw error;\n  }\n}\n\nexport default BaseService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}