{"ast":null,"code":"import _objectSpread from\"/home/paulag/fundraisely-club/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// /client/src/services/SupporterService.ts\n// Dedicated service for supporter and donor CRM functionality\nimport BaseService from'./baseServices';class SupporterService extends BaseService{// ===== SUPPORTER CRUD OPERATIONS =====\n/**\n   * Create a new supporter with full CRM data\n   */async createSupporter(clubId,supporterData){return this.request(\"/clubs/\".concat(clubId,\"/supporters\"),{method:'POST',body:JSON.stringify(supporterData)});}/**\n   * Get all supporters for a club with advanced filtering\n   */async getSupporters(clubId,filters){const params=filters?\"?\".concat(new URLSearchParams(filters).toString()):'';return this.request(\"/clubs/\".concat(clubId,\"/supporters\").concat(params));}/**\n   * Get a specific supporter with full details\n   */async getSupporterDetails(supporterId){return this.request(\"/supporters/\".concat(supporterId));}/**\n   * Update a supporter with new CRM data\n   */async updateSupporter(supporterId,updates){return this.request(\"/supporters/\".concat(supporterId),{method:'PUT',body:JSON.stringify(updates)});}/**\n   * Delete a supporter (with relationship checks)\n   */async deleteSupporter(supporterId){return this.request(\"/supporters/\".concat(supporterId),{method:'DELETE'});}// ===== DONOR ANALYTICS =====\n/**\n   * Get comprehensive donor statistics and segmentation\n   */async getDonorStats(clubId){return this.request(\"/clubs/\".concat(clubId,\"/supporters/donor-stats\"));}/**\n   * Get top donors by total contribution\n   */async getTopDonors(clubId){let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;return this.request(\"/clubs/\".concat(clubId,\"/supporters/top-donors?limit=\").concat(limit));}/**\n   * Get lapsed donors for retention campaigns\n   */async getLapsedDonors(clubId){let months=arguments.length>1&&arguments[1]!==undefined?arguments[1]:12;return this.request(\"/clubs/\".concat(clubId,\"/supporters/lapsed-donors?months=\").concat(months));}/**\n   * Calculate donor retention rate over time\n   */async getDonorRetentionRate(clubId){let timeframe=arguments.length>1&&arguments[1]!==undefined?arguments[1]:12;return this.request(\"/clubs/\".concat(clubId,\"/supporters/retention-rate?timeframe=\").concat(timeframe));}// ===== SUPPORTER SEGMENTATION =====\n/**\n   * Get supporters by type (volunteer, donor, sponsor)\n   */async getSupportersByType(clubId,type){return this.request(\"/clubs/\".concat(clubId,\"/supporters/type/\").concat(type));}/**\n   * Get supporters by relationship strength\n   */async getSupportersByRelationship(clubId,strength){return this.request(\"/clubs/\".concat(clubId,\"/supporters/relationship/\").concat(strength));}/**\n   * Get supporters by lifecycle stage\n   */async getSupportersByLifecycle(clubId,stage){return this.request(\"/clubs/\".concat(clubId,\"/supporters/lifecycle/\").concat(stage));}/**\n   * Search supporters with advanced filters\n   */async searchSupporters(clubId,query,filters){const params=new URLSearchParams({q:query});if(filters){Object.entries(filters).forEach(_ref=>{let[key,value]=_ref;if(value!==undefined)params.append(key,value.toString());});}return this.request(\"/clubs/\".concat(clubId,\"/supporters/search?\").concat(params.toString()));}// ===== SPECIALIZED SUPPORTER QUERIES =====\n/**\n   * Get available volunteers for events\n   */async getAvailableVolunteers(clubId,eventId){const params=eventId?\"?event_id=\".concat(eventId):'';return this.request(\"/clubs/\".concat(clubId,\"/supporters/available-volunteers\").concat(params));}/**\n   * Get supporter engagement details and metrics\n   */async getSupporterEngagement(supporterId){return this.request(\"/supporters/\".concat(supporterId,\"/engagement\"));}/**\n   * Get comprehensive supporter statistics\n   */async getSupporterStats(clubId){return this.request(\"/clubs/\".concat(clubId,\"/supporters/stats\"));}// ===== BULK OPERATIONS =====\n/**\n   * Bulk create supporters (max 100 at once)\n   */async bulkCreateSupporters(clubId,supporters){if(supporters.length>100){throw new Error('Maximum 100 supporters can be created at once');}return this.request(\"/clubs/\".concat(clubId,\"/supporters/bulk\"),{method:'POST',body:JSON.stringify({supporters})});}/**\n   * Export supporters with filtering options\n   */async exportSupporters(clubId,filters){const params=filters?\"?\".concat(new URLSearchParams(filters).toString()):'';return this.request(\"/clubs/\".concat(clubId,\"/supporters/export\").concat(params));}// ===== FOLLOW-UP TASK MANAGEMENT =====\n/**\n   * Get follow-up tasks for the club\n   */async getFollowUpTasks(clubId){let overdue=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;return this.request(\"/clubs/\".concat(clubId,\"/follow-up-tasks?overdue=\").concat(overdue));}// ===== HELPER METHODS =====\n/**\n   * Validate supporter data before submission\n   */validateSupporterData(data){var _data$name;const errors=[];if(!((_data$name=data.name)!==null&&_data$name!==void 0&&_data$name.trim())){errors.push('Supporter name is required');}if(!data.type){errors.push('Supporter type is required');}if(data.email&&!/\\S+@\\S+\\.\\S+/.test(data.email)){errors.push('Invalid email format');}if(data.phone&&!/^[\\+]?[0-9\\s\\-\\(\\)]{10,}$/.test(data.phone)){errors.push('Invalid phone number format');}return errors;}/**\n   * Format supporter data for display\n   */formatSupporterForDisplay(supporter){return _objectSpread(_objectSpread({},supporter),{},{full_address:this.formatAddress(supporter),formatted_phone:this.formatPhoneNumber(supporter.phone),display_name:supporter.name,relationship_badge:this.getRelationshipBadge(supporter.relationship_strength),lifecycle_badge:this.getLifecycleBadge(supporter.lifecycle_stage)});}formatAddress(supporter){const parts=[supporter.address_line1,supporter.address_line2,supporter.city,supporter.state_province,supporter.postal_code,supporter.country].filter(Boolean);return parts.join(', ');}formatPhoneNumber(phone){if(!phone)return'';// Basic phone formatting - you can enhance this based on your needs\nconst cleaned=phone.replace(/\\D/g,'');if(cleaned.length===11&&cleaned.startsWith('44')){return\"+44 \".concat(cleaned.slice(2,5),\" \").concat(cleaned.slice(5,8),\" \").concat(cleaned.slice(8));}return phone;}getRelationshipBadge(strength){const badges={prospect:{color:'gray',label:'Prospect'},new:{color:'blue',label:'New'},regular:{color:'green',label:'Regular'},major:{color:'purple',label:'Major Donor'},lapsed:{color:'yellow',label:'Lapsed'},inactive:{color:'red',label:'Inactive'}};return badges[strength]||badges.prospect;}getLifecycleBadge(stage){const badges={prospect:{color:'gray',label:'Prospect'},first_time:{color:'blue',label:'First Time'},repeat:{color:'green',label:'Repeat'},major:{color:'purple',label:'Major'},lapsed:{color:'yellow',label:'Lapsed'},champion:{color:'gold',label:'Champion'}};return badges[stage]||badges.prospect;}}export default new SupporterService();","map":{"version":3,"names":["BaseService","SupporterService","createSupporter","clubId","supporterData","request","concat","method","body","JSON","stringify","getSupporters","filters","params","URLSearchParams","toString","getSupporterDetails","supporterId","updateSupporter","updates","deleteSupporter","getDonorStats","getTopDonors","limit","arguments","length","undefined","getLapsedDonors","months","getDonorRetentionRate","timeframe","getSupportersByType","type","getSupportersByRelationship","strength","getSupportersByLifecycle","stage","searchSupporters","query","q","Object","entries","forEach","_ref","key","value","append","getAvailableVolunteers","eventId","getSupporterEngagement","getSupporterStats","bulkCreateSupporters","supporters","Error","exportSupporters","getFollowUpTasks","overdue","validateSupporterData","data","_data$name","errors","name","trim","push","email","test","phone","formatSupporterForDisplay","supporter","_objectSpread","full_address","formatAddress","formatted_phone","formatPhoneNumber","display_name","relationship_badge","getRelationshipBadge","relationship_strength","lifecycle_badge","getLifecycleBadge","lifecycle_stage","parts","address_line1","address_line2","city","state_province","postal_code","country","filter","Boolean","join","cleaned","replace","startsWith","slice","badges","prospect","color","label","new","regular","major","lapsed","inactive","first_time","repeat","champion"],"sources":["/home/paulag/fundraisely-club/client/src/services/supporterService.ts"],"sourcesContent":["// /client/src/services/SupporterService.ts\n// Dedicated service for supporter and donor CRM functionality\n\nimport BaseService from './baseServices';\n\nexport interface CreateSupporterData {\n  // Core fields\n  name: string;\n  type: 'volunteer' | 'donor' | 'sponsor';\n  notes?: string;\n  \n  // Contact information\n  email?: string;\n  phone?: string;\n  address_line1?: string;\n  address_line2?: string;\n  city?: string;\n  state_province?: string;\n  postal_code?: string;\n  country?: string;\n  preferred_contact_method?: 'email' | 'phone' | 'post' | 'sms';\n  \n  // Relationship management\n  relationship_strength?: 'prospect' | 'new' | 'regular' | 'major' | 'lapsed' | 'inactive';\n  contact_source?: 'website' | 'event' | 'referral' | 'social_media' | 'cold_outreach' | 'walk_in' | 'other';\n  referral_source?: string;\n  \n  // Communication preferences\n  email_subscribed?: boolean;\n  sms_subscribed?: boolean;\n  newsletter_subscribed?: boolean;\n  event_notifications?: boolean;\n  do_not_contact?: boolean;\n  \n  // Lifecycle & Priority\n  lifecycle_stage?: 'prospect' | 'first_time' | 'repeat' | 'major' | 'lapsed' | 'champion';\n  priority_level?: 'low' | 'medium' | 'high' | 'urgent';\n  next_contact_date?: string;\n  \n  // Flexible data\n  tags?: string[];\n  interests?: string[];\n  skills?: string[];\n  communication_preferences?: Record<string, any>;\n  \n  // GDPR\n  gdpr_consent?: boolean;\n  data_protection_notes?: string;\n}\n\nexport interface SupporterFilters {\n  type?: 'volunteer' | 'donor' | 'sponsor';\n  search?: string;\n  relationship_strength?: 'prospect' | 'new' | 'regular' | 'major' | 'lapsed' | 'inactive';\n  lifecycle_stage?: 'prospect' | 'first_time' | 'repeat' | 'major' | 'lapsed' | 'champion';\n  priority_level?: 'low' | 'medium' | 'high' | 'urgent';\n  limit?: number;\n  offset?: number;\n}\n\nexport interface DonorStats {\n  // Overview metrics\n  total_donors: number;\n  active_donors: number;\n  recent_donors: number;\n  new_donors_this_month: number;\n  \n  // Financial metrics\n  total_amount_raised: number;\n  average_donor_value: number;\n  largest_donor_amount: number;\n  \n  // Segmentation\n  relationship_breakdown: Array<{ relationship_strength: string; count: number }>;\n  lifecycle_breakdown: Array<{ lifecycle_stage: string; count: number }>;\n}\n\nexport interface RetentionAnalysis {\n  previous_period_donors: number;\n  retained_donors: number;\n  retention_rate: number;\n  timeframe_months: number;\n}\n\nclass SupporterService extends BaseService {\n  // ===== SUPPORTER CRUD OPERATIONS =====\n\n  /**\n   * Create a new supporter with full CRM data\n   */\n  async createSupporter(clubId: string, supporterData: CreateSupporterData) {\n    return this.request<{ message: string; supporter: any }>(`/clubs/${clubId}/supporters`, {\n      method: 'POST',\n      body: JSON.stringify(supporterData),\n    });\n  }\n\n  /**\n   * Get all supporters for a club with advanced filtering\n   */\n  async getSupporters(clubId: string, filters?: SupporterFilters) {\n    const params = filters ? `?${new URLSearchParams(filters as any).toString()}` : '';\n    return this.request<{ \n      supporters: any[]; \n      total: number; \n      filters_applied: SupporterFilters;\n    }>(`/clubs/${clubId}/supporters${params}`);\n  }\n\n  /**\n   * Get a specific supporter with full details\n   */\n  async getSupporterDetails(supporterId: string) {\n    return this.request<{ supporter: any }>(`/supporters/${supporterId}`);\n  }\n\n  /**\n   * Update a supporter with new CRM data\n   */\n  async updateSupporter(supporterId: string, updates: Partial<CreateSupporterData>) {\n    return this.request<{ message: string; supporter: any }>(`/supporters/${supporterId}`, {\n      method: 'PUT',\n      body: JSON.stringify(updates),\n    });\n  }\n\n  /**\n   * Delete a supporter (with relationship checks)\n   */\n  async deleteSupporter(supporterId: string) {\n    return this.request<{ message: string }>(`/supporters/${supporterId}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // ===== DONOR ANALYTICS =====\n\n  /**\n   * Get comprehensive donor statistics and segmentation\n   */\n  async getDonorStats(clubId: string) {\n    return this.request<{ \n      donor_statistics: DonorStats; \n      generated_at: string;\n    }>(`/clubs/${clubId}/supporters/donor-stats`);\n  }\n\n  /**\n   * Get top donors by total contribution\n   */\n  async getTopDonors(clubId: string, limit: number = 10) {\n    return this.request<{ \n      top_donors: any[]; \n      limit: number;\n    }>(`/clubs/${clubId}/supporters/top-donors?limit=${limit}`);\n  }\n\n  /**\n   * Get lapsed donors for retention campaigns\n   */\n  async getLapsedDonors(clubId: string, months: number = 12) {\n    return this.request<{ \n      lapsed_donors: any[]; \n      threshold_months: number; \n      total_lapsed: number;\n    }>(`/clubs/${clubId}/supporters/lapsed-donors?months=${months}`);\n  }\n\n  /**\n   * Calculate donor retention rate over time\n   */\n  async getDonorRetentionRate(clubId: string, timeframe: number = 12) {\n    return this.request<{ \n      retention_analysis: RetentionAnalysis; \n      analysis_date: string;\n    }>(`/clubs/${clubId}/supporters/retention-rate?timeframe=${timeframe}`);\n  }\n\n  // ===== SUPPORTER SEGMENTATION =====\n\n  /**\n   * Get supporters by type (volunteer, donor, sponsor)\n   */\n  async getSupportersByType(clubId: string, type: 'volunteer' | 'donor' | 'sponsor') {\n    return this.request<{ \n      supporters: any[]; \n      type: string; \n      total: number;\n    }>(`/clubs/${clubId}/supporters/type/${type}`);\n  }\n\n  /**\n   * Get supporters by relationship strength\n   */\n  async getSupportersByRelationship(clubId: string, strength: 'prospect' | 'new' | 'regular' | 'major' | 'lapsed' | 'inactive') {\n    return this.request<{ \n      supporters: any[]; \n      relationship_strength: string; \n      total: number;\n    }>(`/clubs/${clubId}/supporters/relationship/${strength}`);\n  }\n\n  /**\n   * Get supporters by lifecycle stage\n   */\n  async getSupportersByLifecycle(clubId: string, stage: 'prospect' | 'first_time' | 'repeat' | 'major' | 'lapsed' | 'champion') {\n    return this.request<{ \n      supporters: any[]; \n      lifecycle_stage: string; \n      total: number;\n    }>(`/clubs/${clubId}/supporters/lifecycle/${stage}`);\n  }\n\n  /**\n   * Search supporters with advanced filters\n   */\n  async searchSupporters(clubId: string, query: string, filters?: Omit<SupporterFilters, 'search'>) {\n    const params = new URLSearchParams({ q: query });\n    if (filters) {\n      Object.entries(filters).forEach(([key, value]) => {\n        if (value !== undefined) params.append(key, value.toString());\n      });\n    }\n    \n    return this.request<{ \n      search_results: any[]; \n      query: string; \n      filters: any; \n      total_results: number;\n    }>(`/clubs/${clubId}/supporters/search?${params.toString()}`);\n  }\n\n  // ===== SPECIALIZED SUPPORTER QUERIES =====\n\n  /**\n   * Get available volunteers for events\n   */\n  async getAvailableVolunteers(clubId: string, eventId?: string) {\n    const params = eventId ? `?event_id=${eventId}` : '';\n    return this.request<{ \n      available_volunteers: any[]; \n      event_id: string | null; \n      total: number;\n    }>(`/clubs/${clubId}/supporters/available-volunteers${params}`);\n  }\n\n  /**\n   * Get supporter engagement details and metrics\n   */\n  async getSupporterEngagement(supporterId: string) {\n    return this.request<{ \n      engagement_report: any; \n      generated_at: string;\n    }>(`/supporters/${supporterId}/engagement`);\n  }\n\n  /**\n   * Get comprehensive supporter statistics\n   */\n  async getSupporterStats(clubId: string) {\n    return this.request<{ \n      supporter_statistics: any; \n      generated_at: string;\n    }>(`/clubs/${clubId}/supporters/stats`);\n  }\n\n  // ===== BULK OPERATIONS =====\n\n  /**\n   * Bulk create supporters (max 100 at once)\n   */\n  async bulkCreateSupporters(clubId: string, supporters: CreateSupporterData[]) {\n    if (supporters.length > 100) {\n      throw new Error('Maximum 100 supporters can be created at once');\n    }\n    \n    return this.request<{ \n      message: string; \n      result: {\n        successful: any[];\n        errors: any[];\n        total_processed: number;\n        successful_count: number;\n        error_count: number;\n      };\n    }>(`/clubs/${clubId}/supporters/bulk`, {\n      method: 'POST',\n      body: JSON.stringify({ supporters }),\n    });\n  }\n\n  /**\n   * Export supporters with filtering options\n   */\n  async exportSupporters(clubId: string, filters?: SupporterFilters & { format?: 'csv' }) {\n    const params = filters ? `?${new URLSearchParams(filters as any).toString()}` : '';\n    return this.request<{ \n      export_data: any[]; \n      filename: string; \n      total_records: number; \n      export_format: string; \n      filters_applied: any; \n      generated_at: string;\n    }>(`/clubs/${clubId}/supporters/export${params}`);\n  }\n\n  // ===== FOLLOW-UP TASK MANAGEMENT =====\n\n  /**\n   * Get follow-up tasks for the club\n   */\n  async getFollowUpTasks(clubId: string, overdue: boolean = false) {\n    return this.request<{ \n      follow_up_tasks: any[]; \n      is_overdue_filter: boolean; \n      total_tasks: number;\n    }>(`/clubs/${clubId}/follow-up-tasks?overdue=${overdue}`);\n  }\n\n  // ===== HELPER METHODS =====\n\n  /**\n   * Validate supporter data before submission\n   */\n  validateSupporterData(data: CreateSupporterData): string[] {\n    const errors: string[] = [];\n\n    if (!data.name?.trim()) {\n      errors.push('Supporter name is required');\n    }\n\n    if (!data.type) {\n      errors.push('Supporter type is required');\n    }\n\n    if (data.email && !/\\S+@\\S+\\.\\S+/.test(data.email)) {\n      errors.push('Invalid email format');\n    }\n\n    if (data.phone && !/^[\\+]?[0-9\\s\\-\\(\\)]{10,}$/.test(data.phone)) {\n      errors.push('Invalid phone number format');\n    }\n\n    return errors;\n  }\n\n  /**\n   * Format supporter data for display\n   */\n  formatSupporterForDisplay(supporter: any) {\n    return {\n      ...supporter,\n      full_address: this.formatAddress(supporter),\n      formatted_phone: this.formatPhoneNumber(supporter.phone),\n      display_name: supporter.name,\n      relationship_badge: this.getRelationshipBadge(supporter.relationship_strength),\n      lifecycle_badge: this.getLifecycleBadge(supporter.lifecycle_stage),\n    };\n  }\n\n  private formatAddress(supporter: any): string {\n    const parts = [\n      supporter.address_line1,\n      supporter.address_line2,\n      supporter.city,\n      supporter.state_province,\n      supporter.postal_code,\n      supporter.country\n    ].filter(Boolean);\n    \n    return parts.join(', ');\n  }\n\n  private formatPhoneNumber(phone?: string): string {\n    if (!phone) return '';\n    \n    // Basic phone formatting - you can enhance this based on your needs\n    const cleaned = phone.replace(/\\D/g, '');\n    if (cleaned.length === 11 && cleaned.startsWith('44')) {\n      return `+44 ${cleaned.slice(2, 5)} ${cleaned.slice(5, 8)} ${cleaned.slice(8)}`;\n    }\n    return phone;\n  }\n\n  private getRelationshipBadge(strength?: string) {\n    const badges = {\n      prospect: { color: 'gray', label: 'Prospect' },\n      new: { color: 'blue', label: 'New' },\n      regular: { color: 'green', label: 'Regular' },\n      major: { color: 'purple', label: 'Major Donor' },\n      lapsed: { color: 'yellow', label: 'Lapsed' },\n      inactive: { color: 'red', label: 'Inactive' }\n    };\n    return badges[strength as keyof typeof badges] || badges.prospect;\n  }\n\n  private getLifecycleBadge(stage?: string) {\n    const badges = {\n      prospect: { color: 'gray', label: 'Prospect' },\n      first_time: { color: 'blue', label: 'First Time' },\n      repeat: { color: 'green', label: 'Repeat' },\n      major: { color: 'purple', label: 'Major' },\n      lapsed: { color: 'yellow', label: 'Lapsed' },\n      champion: { color: 'gold', label: 'Champion' }\n    };\n    return badges[stage as keyof typeof badges] || badges.prospect;\n  }\n}\n\nexport default new SupporterService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}