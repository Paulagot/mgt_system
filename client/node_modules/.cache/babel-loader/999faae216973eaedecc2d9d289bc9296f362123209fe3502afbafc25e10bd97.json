{"ast":null,"code":"var _jsxFileName = \"/home/paulag/fundraisely-club/client/src/components/auth/AuthGuard.tsx\",\n  _s = $RefreshSig$();\n// client/src/components/auth/AuthGuard.tsx\nimport React, { useEffect, useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../../store/app_store';\nimport { apiService } from '../../services/apiService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AuthGuard({\n  children\n}) {\n  _s();\n  const {\n    isAuthenticated,\n    user,\n    setUser,\n    setClub\n  } = useAuth();\n  const [isLoading, setIsLoading] = useState(true);\n  const [isCheckingAuth, setIsCheckingAuth] = useState(false);\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      // ✅ Fixed: Use 'auth_token' to match your app_store.ts\n      const token = localStorage.getItem('auth_token');\n      if (!token) {\n        setIsLoading(false);\n        return;\n      }\n      if (isAuthenticated && user) {\n        setIsLoading(false);\n        return;\n      }\n      try {\n        setIsCheckingAuth(true);\n        const response = await apiService.getCurrentUser();\n\n        // ✅ Fixed: Response is { user: any; club: any } directly, no .data wrapper\n        setUser(response.user);\n        setClub(response.club);\n      } catch (error) {\n        // Token is invalid, clear it\n        // ✅ Fixed: Use 'auth_token' to match your app_store.ts\n        localStorage.removeItem('auth_token');\n        console.error('Auth check failed:', error);\n      } finally {\n        setIsCheckingAuth(false);\n        setIsLoading(false);\n      }\n    };\n    checkAuthStatus();\n  }, [isAuthenticated, user, setUser, setClub]);\n\n  // Loading state while checking authentication\n  if (isLoading || isCheckingAuth) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-50 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-4 border-blue-500 border-t-transparent mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Checking authentication...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Redirect to auth page if not authenticated\n  if (!isAuthenticated || !user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/auth\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render protected content\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n}\n_s(AuthGuard, \"j2TfwwbjgdbKQRBj2z2y8TKlu04=\", false, function () {\n  return [useAuth];\n});\n_c = AuthGuard;\nvar _c;\n$RefreshReg$(_c, \"AuthGuard\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","useAuth","apiService","jsxDEV","_jsxDEV","Fragment","_Fragment","AuthGuard","children","_s","isAuthenticated","user","setUser","setClub","isLoading","setIsLoading","isCheckingAuth","setIsCheckingAuth","checkAuthStatus","token","localStorage","getItem","response","getCurrentUser","club","error","removeItem","console","className","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["/home/paulag/fundraisely-club/client/src/components/auth/AuthGuard.tsx"],"sourcesContent":["// client/src/components/auth/AuthGuard.tsx\nimport React, { useEffect, useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../../store/app_store';\nimport { apiService } from '../../services/apiService';\n\ninterface AuthGuardProps {\n  children: React.ReactNode;\n}\n\nexport default function AuthGuard({ children }: AuthGuardProps) {\n  const { isAuthenticated, user, setUser, setClub } = useAuth();\n  const [isLoading, setIsLoading] = useState(true);\n  const [isCheckingAuth, setIsCheckingAuth] = useState(false);\n\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      // ✅ Fixed: Use 'auth_token' to match your app_store.ts\n      const token = localStorage.getItem('auth_token');\n      \n      if (!token) {\n        setIsLoading(false);\n        return;\n      }\n\n      if (isAuthenticated && user) {\n        setIsLoading(false);\n        return;\n      }\n\n      try {\n        setIsCheckingAuth(true);\n        const response = await apiService.getCurrentUser();\n        \n        // ✅ Fixed: Response is { user: any; club: any } directly, no .data wrapper\n        setUser(response.user);\n        setClub(response.club);\n        \n      } catch (error) {\n        // Token is invalid, clear it\n        // ✅ Fixed: Use 'auth_token' to match your app_store.ts\n        localStorage.removeItem('auth_token');\n        console.error('Auth check failed:', error);\n      } finally {\n        setIsCheckingAuth(false);\n        setIsLoading(false);\n      }\n    };\n\n    checkAuthStatus();\n  }, [isAuthenticated, user, setUser, setClub]);\n\n  // Loading state while checking authentication\n  if (isLoading || isCheckingAuth) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-4 border-blue-500 border-t-transparent mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Checking authentication...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Redirect to auth page if not authenticated\n  if (!isAuthenticated || !user) {\n    return <Navigate to=\"/auth\" replace />;\n  }\n\n  // Render protected content\n  return <>{children}</>;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}